package com.newgonzo.commons.logging{	import flash.events.*;		public class AbstractTarget implements ILoggingTarget	{		private var categoryFilter:RegExp;		private var logLevel:int = LogEventLevel.ALL;				private var loggerCount:int = 0;				public function set level(level:int):void		{			Log.removeTarget(this);			logLevel = level;			Log.addTarget(this);		}				public function get level():int		{			return logLevel;		}				public function set filter(value:RegExp):void		{			// if there aren't any logggers, changing the filter doesn't do anything			if(loggerCount > 0)			{				Log.removeTarget(this);				categoryFilter = value;				Log.addTarget(this);			}			else			{				categoryFilter = value;			}		}				public function get filter():RegExp		{			return categoryFilter;		}				public function addLogger(logger:ILogger):void		{			loggerCount++;			logger.addEventListener(LogEvent.LOG, logLogged);		}				public function removeLogger(logger:ILogger):void		{			loggerCount--;			logger.removeEventListener(LogEvent.LOG, logLogged);		}				private function logLogged(event:LogEvent):void		{			if(event.level >= logLevel)			{				logEvent(event);			}			}				public function logEvent(event:LogEvent):void {}	}}